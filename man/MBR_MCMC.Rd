% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MBR_MCMC.R
\name{MBR_MCMC}
\alias{MBR_MCMC}
\title{MCMC Sampler for Multi-resolution Binary Regression Model}
\usage{
MBR_MCMC(
  y,
  t,
  similarity_matrix,
  M,
  m,
  n_burn = 1000,
  n_iter = 11000,
  proposal_sd,
  alpha_a,
  beta_a,
  alpha_b,
  beta_b
)
}
\arguments{
\item{y}{A numeric vector of observed adverse event counts across experimental units.}

\item{t}{A numeric vector of total exposure time (e.g., patient-time at risk), matching the length of \code{y}.}

\item{similarity_matrix}{A symmetric matrix of pairwise similarity values among units, typically computed
using \code{\link{calculate_similarity}}. Guides the clustering behavior in the PPMx prior.}

\item{M}{Concentration parameter of the product partition model. Controls expected number of clusters.}

\item{m}{Number of auxiliary components used in Neal's Algorithm 8 to propose new cluster values.}

\item{n_burn}{Number of burn-in iterations to discard from the MCMC chain.}

\item{n_iter}{Total number of MCMC iterations (must be greater than \code{n_burn}).}

\item{proposal_sd}{Standard deviation of the log-normal proposal used to update the shape parameter \eqn{a}.}

\item{alpha_a}{Shape parameter for the Gamma prior on \eqn{a}, i.e., \eqn{a \sim \text{Gamma}(\alpha_a, \beta_a)}.}

\item{beta_a}{Rate parameter for the Gamma prior on \eqn{a}.}

\item{alpha_b}{Shape parameter for the Gamma prior on \eqn{b}, i.e., \eqn{b \sim \text{Gamma}(\alpha_b, \beta_b)}.}

\item{beta_b}{Rate parameter for the Gamma prior on \eqn{b}.}
}
\value{
A list with the following components:
\describe{
  \item{\code{a_spls}}{Posterior samples of the shape parameter \eqn{a}, excluding burn-in.}
  \item{\code{b_spls}}{Posterior samples of the rate parameter \eqn{b}, excluding burn-in.}
  \item{\code{theta_spls}}{A matrix of posterior samples for unit-specific rates \eqn{\theta_u}
    (rows are samples, columns are units), excluding burn-in.}
}
}
\description{
This function implements Markov Chain Monte Carlo (MCMC) sampling for a
Poisson likelihood model with Gamma-distributed rate parameters (\eqn{\theta_u})
under a covariate-dependent product partition model (PPMx). It supports clustering
of experimental units using a similarity matrix derived from covariate profiles.
The algorithm uses Gibbs sampling for \eqn{b} and \eqn{\theta}, and Metropolis-Hastings
with a log-normal proposal for the hyperparameter \eqn{a}.
}
\details{
The sampler implements a hierarchical Bayesian model in which unit-level AE counts
are modeled as Poisson distributed, \eqn{y_u \sim \text{Poisson}(t_u \cdot \theta_u)}.
The rates \eqn{\theta_u} are shared across clusters defined by a random partition,
where clustering is influenced by pairwise similarity of covariate profiles.

The PPMx prior is enforced via similarity scores computed outside the function
and passed in through the \code{similarity_matrix} argument. Neal's Algorithm 8 is used
to update cluster allocations and \eqn{\theta_u} values simultaneously.
}
\examples{
# Set hyperparameters and MCMC settings
M <- 2               # Total mass parameter in the PPM
m <- 3               # Number of auxiliary components in Algorithm 8
proposal_sd <- 0.2   # Proposal SD for Metropolis-Hastings update of 'a'
alpha_a <- 1; beta_a <- 1
alpha_b <- 1; beta_b <- 1
n_burn <- 1000
n_iter <- 11000
set.seed(123)

# Extract observed outcomes from trial data
t <- indat_outcome$T       # Total exposure time per unit
y <- indat_outcome$SAE     # Observed SAE counts per unit

# Assume similarity matrix has already been computed (see calculate_similarity)
# unblind_similarity_matrix <- calculate_similarity(...)

# Run MCMC sampler
unblind_spls <- MBR_MCMC(
  y = y,
  t = t,
  similarity_matrix = unblind_similarity_matrix,
  M = M,
  m = m,
  n_burn = n_burn,
  n_iter = n_iter,
  proposal_sd = proposal_sd,
  alpha_a = alpha_a, beta_a = beta_a,
  alpha_b = alpha_b, beta_b = beta_b
)

# Extract posterior samples of theta
unblind_theta_spls <- unblind_spls$theta_spls

}
\references{
Müller, P., Quintana, F., & Rosner, G. (2011). A product partition model with regression on covariates.
Journal of Computational and Graphical Statistics, 20(1), 260–278.

Dahl, D. B., Day, R., & Tsai, J. W. (2017). Random partition distribution indexed by pairwise information.
Journal of the American Statistical Association, 112(518), 721–732.

Neal, R. M. (2000). Markov chain sampling methods for Dirichlet process mixture models.
Journal of Computational and Graphical Statistics, 9(2), 249–265.
}
